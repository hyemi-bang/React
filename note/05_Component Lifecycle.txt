05_Component Lifecycle.txt

* 구글링 : react component lifecycle
(https://armadillo-dev.github.io/javascript/react-component-lifecycle/#constructor)
(https://i0.wp.com/programmingwithmosh.com/wp-content/uploads/2018/10/Screen-Shot-2018-10-31-at-1.44.28-PM.png?ssl=1)

1. Mounting
    - 새로 생성된 엘리먼트가 최초로 화면에 출력되는 과정
    - 해당 엘리먼트가 DOM에 삽입된 직후 (화면에 그려지기 직전)
        componentDidMount() 메서드가 호출된다 (최초로 한번만)
    - componentDidMount() DOM트리의 정보가 필요한 초기화 작업을 진행하기 좋은 시점이다

    constructor() : 컴포넌트의 state 초기값을 정의한다 (this.state = {...} 형태)
                    컴포넌트에서 사용되는 이벤트 핸들러를 바인딩한다 (this.someEventHandler = this.someEventHandler.bind(this) 형태)
    static getDerivedStateFromProps() 
    render() : this.props와 this.state 값을 검증하며, 반환값을 화면에 랜더링, 순수함수로 작성해야 한다.
               반환값 종류 (React elements, 배열, Portals, 문자열, 숫자, boolean, null)
    componentDidMount() : 컴포넌트가 최초로 마운팅 된 이후 1회 실행
                          이벤트 리스너 등록 및 ajax 처리
                          setTimeout, setInterval 실행

2. Updating
    - 이미 생성된 엘리먼트가 다양한 원인들로 다시 그려지는 경우 (New props, setState(), forceUpdate())
    - 화면을 갱신하기 위해 render() 및 DOM트리 삽입이 발생한 후에 componentDidUpdate() 메서드가 호출된다.

    static getDerivedStateFromProps() : prop으로 전달받은 값을 state로 동기화 하고 싶을 때 사용한다.
                                        null을 리턴하면 동기화가 일어나지 않는다.
                                        공식홈페이지에서는 제한적 사용할 것을 권장 (https://legacy.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html)
    shouldComponentUpdate() : this.state나 this.props값에 변경이 있을 때 실행된다. 
                              true값을 리턴하면 render() 메서드가 실행되며 false를 리턴하면 업데이트가 무시된다.
                              불필요한 랜더링을 방지하여 성능 최적화를 위해 주로 사용한다.
                              기본반환값이 true 라 조건에 맞추어 false 리턴시켜주면 된다.
    render()
    getSnapshotBeforeUpdate() : render()가 실행되고 실제 DOM에 변경사항이 반영되기 직전에 실행된다. 
                                메서드에서 반환한 값은 componentDidUpdate()의 3번째 인자로 사용
                                주로 DOM에 대한 정보를 capture 할 때 사용된다(ex. scroll position).

    componentDidUpdate() : 컴포넌트가 업데이트 된 이후 실행되며, 초기 mounting 이후에는 실행되지 않는다.
                           컴포넌트의 업데이트 이후 DOM 조작,
                           API 호출 등 네트워크 요청을 위해 사용된다.
                           componentDidUpdate() 내부에서 this.setState()를 호출할 때에는 항상 조건문으로 감싸주어야 한다. 
                           그렇지 않으면 무한 업데이트가 발생될 수 있다.
                           getSnapshotBeforeUpdate()에서 반환한 값을 3번째 인자로 활용 할 수 있다. 
                           기본값은 undefined

3. Unmounting
    - 해당 엘리먼트가 화면에 더 이상 표시되지 않게 되었을 때 componentWillUnmount() 메서드가 호출
    - React.StrictMode일때 엘리먼트 마운트시 테스트 삼아 한번 언마운트를 진행한 후에 다시 마운트를 진행한다


    componentWillUnmount() : 컴포넌트가 unmount 되기 직전에 실행
                             componentDidMount()에서 등록한 이벤트 리스너, setInterval, setTimeout을 클리어 하거나 
                             외부 라이브러리 인스턴스 제거 등에 사용